# Global options
{
	# Handle the certificates ourselves
	auto_https off

	# Redirect the server logs to a file
	log default {
		output file /srv/data/caddy-log/main.log {
			mode 640
		}
		format json
	}

	# Enable caching
	cache {
		otter
	}

	# Allow cached responses to skip the rate limit
	order rate_limit before header
	order cache before rate_limit

	# Aggressive timeouts
	servers {
		timeouts {
			read_body   5s
			read_header 5s
			write       5s
		}
	}
}

# The web server
https://svn.tug.org:8369 {
	# Socket activation
	bind fd/3 { # TCP :8369
		protocols h1 h2
	}
	bind fdgram/4 { # UDP :8369
		protocols h3
	}
	bind 127.0.83.69 { # Health checks
		protocols h1
	}

	# TLS
	tls /certificates/fullchain.pem /certificates/privkey.pem

	# Save the access logs to a file
	log json {
		output file /srv/data/caddy-log/access.log {
			mode 640
		}
		format json
	}

	log apache {
		output file /srv/data/caddy-log/error.log {
			mode 640
			roll_size 20MiB
			roll_keep 0
		}
		format transform "{common_log}"
	}

	# Enable gzip and zstd compression
	encode zstd gzip

	# Enable the server-side cache
	cache

	# Set the cache durations
	map {uri}               {cache_duration} {
		~/viewvc-docroot/   7776000  # Static files, 90 days
		/favicon.ico        7776000  # (null) favicon, 90 days
		~[?&](revision|pathrev|annotate|r1|r2)=  2592000  # Revision pages, 30 days
		/robots.txt          604800  # Robots.txt, 1 week
		~[?&]log_pagestart=   86400  # Additional pages are expensive, 1 day
		~[?&]view=log           900  # The first page of the log, 15 minutes
		default               86400  # Anything else, 1 day
	}
	header Cache-Control max-age={cache_duration}

	# Rate limit the requests to 10 per minute
	rate_limit {
		zone svn {
			match {
				not path /viewvc-docroot/*
			}
			key {remote_host}
			events 8
			window 60s
		}
	}

	# Give a friendly error message for rate-limited requests
	handle_errors 429 {
		header Content-Type text/html
		header -Cache-Control
		respond `
		<!DOCTYPE html>
		<html lang="en">
		<meta charset="UTF-8">
		<title>Too Many Requests</title>
		<meta name="viewport" content="width=device-width, initial-scale=1.0" >
		<meta name="color-scheme" content="light dark">
		<h1>Too Many Requests</h1>
		<p>You can only make 10 requests per minute. Please wait a little bit
		and try again.
		<p><a href="https://tug.org">Return to the main site.</a>
		` 429
	}

	# Give a friendly error message if the server times out
	handle_errors 504 {
		header Content-Type text/html
		header -Cache-Control
		respond `
		<!DOCTYPE html>
		<html lang="en">
		<meta charset="UTF-8">
		<title>Request took too long</title>
		<meta name="viewport" content="width=device-width, initial-scale=1.0" >
		<meta name="color-scheme" content="light dark">
		<h1>Request took too long</h1>
		<p>Your request took too long to process. Either the server is
		overloaded, or the page that you are trying to load is too large.
		<p><a href="https://tug.org">Return to the main site.</a>
		` 504
		header Retry-After 10
	}

	# Just show a plain error message for other errors
	handle_errors {
		respond {err.status_text} {err.status_code}
	}

	# Handle the ViewVC static files
	root /usr/local/share/viewvc/docroot
	handle_path /viewvc-docroot/* {
		file_server
	}

	# Politely ask the robots to go away
	handle /robots.txt {
		respond `User-agent: *
Disallow: /

User-agent: ia_archiver
Allow: /
Crawl-delay: 10`
	}

	@not-robots {
		not path /robots.txt
	}
	header @not-robots X-Robots-Tag "index, nofollow"

	# Security headers
	header {
		X-Content-Type-Options nosniff
		Cross-Origin-Resource-Policy same-origin
		Content-Security-Policy "default-src 'none'; frame-ancestors 'none'; form-action 'none'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; script-src 'self' 'unsafe-inline';"
		Strict-Transport-Security "max-age=1209600" # 2 weeks
	}

	# Some browsers are following the tug.org redirects incorrectly, so let's
	# help them out by removing the /svn prefix for them
	handle_path /svn/* {
		redir /{uri} permanent
	}

	# No favicon
	respond /favicon.ico 410

	# Block malicious requests
	@bad-asns {
		# Block the ASNs used by bots
		maxmind_geolocation {
			db_path "/usr/local/share/GeoIP/dbip-asn-lite.mmdb"
			# Check the request logs for the top ASNs, then verify with
			# https://radar.cloudflare.com/traffic/asNNNNNN#bot-vs-human
			# https://bgp.he.net/ASNNNNNN
			allow_asn \
				45102 \ # Alibaba
				37963 \ # Alibaba
				13335 \ # Cloudflare
				396982 \ # Google
				136907 \ # Huawei
				150436 \ # Bytedance
				14061 \ # Digital Ocean
				# 197540 \ # Netcup, but this is Max's server
				32934 \ # Facebook
				15169 \ # Google
				64080 \ # Syn
				# 4134 \ # China Telecom, human ISP
				8075 \ # Microsoft
				139659 \ # Lucida Cloud
				49367 \ # Seflow
				16509 \ # Amazon/AWS
				34081 \ # Server24
				# 4837 \ # China Unicom, human ISP
				397423 \ # Tier.net
				# 210906 \ # Bite Lietuva, human ISP
				13332 \ # Hype Creation
				# 3320 \ # Deutsche Telekom, human ISP
				205544 \ # Lease Web
				# 7545 \ # TPG Australia, human ISP
				# 214996 \ # Netcup, but this is Max's server
				# 4812 \ # China Telecom, human ISP
				396356 \ # Latitude
				8100 \ # QuadraNet
				24940 \ # Hetzner
				# 6327 \ # Shaw Canada, human ISP
				30081 \ # Cache Fly
		}
		# Allow raw file downloads
		not {
			header_regexp User-Agent "^([Ww]get|[Cc]url)"
			query view=co
		}
    }

	# Reverse proxy to the ViewVC server
	route {
		handle @bad-asns {
			header Content-Type text/html
			header -Cache-Control
			respond `
			<!DOCTYPE html>
			<html lang="en">
			<meta charset="UTF-8">
			<title>IP address blocked</title>
			<meta name="viewport" content="width=device-width, initial-scale=1.0" >
			<meta name="color-scheme" content="light dark">
			<h1>IP address blocked</h1>
			<p>Users from your ISP/hosting provider have made excessive requests
			to this server, so we unfortunately had to block you. If you believe
			that this is an error, please contact us via email to the address
			listed on the main site.
			<p><a href="https://tug.org">Return to the main site.</a>
			` 403
		}

		reverse_proxy {
			to :43219

			transport http {
				dial_timeout 2s
				response_header_timeout 2s
				read_timeout 2s
				write_timeout 2s
				max_conns_per_host 10
			}
		}
	}
}
